# Generated by Django 4.2.7 on 2025-09-11 11:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Syllabus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='syllabi/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'txt'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('topic_count', models.PositiveIntegerField(default=0)),
                ('extracted_text', models.TextField(blank=True)),
                ('topics_data', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='syllabi', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Syllabus',
                'verbose_name_plural': 'Syllabi',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_type', models.CharField(choices=[('QUANTUM', 'Quantum VQE Prediction'), ('CLASSICAL', 'Classical ML Prediction'), ('HYBRID', 'Hybrid Prediction')], default='HYBRID', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accuracy_score', models.FloatField(blank=True, null=True)),
                ('quantum_result', models.JSONField(blank=True, default=dict)),
                ('classical_result', models.JSONField(blank=True, default=dict)),
                ('final_prediction', models.JSONField(blank=True, default=dict)),
                ('description', models.TextField(blank=True)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('syllabus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='predictor.syllabus')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('frequency', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('syllabus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='predictor.syllabus')),
            ],
            options={
                'ordering': ['-frequency', '-last_seen'],
                'unique_together': {('syllabus', 'name')},
            },
        ),
        migrations.CreateModel(
            name='ExamPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='exams/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'txt'])])),
                ('year', models.PositiveIntegerField()),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('question_count', models.PositiveIntegerField(default=0)),
                ('extracted_text', models.TextField(blank=True)),
                ('questions_data', models.JSONField(blank=True, default=list)),
                ('topics_covered', models.JSONField(blank=True, default=list)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_papers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
                'unique_together': {('user', 'title', 'year')},
            },
        ),
    ]
